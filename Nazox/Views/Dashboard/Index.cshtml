@{
    ViewBag.Title = "Dashboard";
    ViewBag.pTitle = "Dashboard";
    ViewBag.pageTitle = "Desarrollo Urbano";
    Layout = "~/Views/_Shared/_Layout.cshtml";
}

<!-- jquery.vectormap css -->
<link href="~/assets/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css" rel="stylesheet" type="text/css" />

<!-- DataTables -->
<link href="~/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />

<!-- Responsive datatable examples -->
<link href="~/assets/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />

<style>
    /* Estilo para el contenedor de las pestañas */
    .tabs-container {
        font-family: Arial, sans-serif;
        margin: 20px auto;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    /* Estilo para los botones de las pestañas */
    .tabs {
        display: flex;
        border-bottom: 1px solid #ddd;
    }

    .tab-button {
        background-color: #f1f1f1;
        border: none;
        padding: 10px 20px;
        cursor: pointer;
        transition: background-color 0.3s;
        font-size: 16px;
    }

        .tab-button:hover {
            background-color: #ddd;
        }

        .tab-button.active {
            background-color: #4CAF50;
            color: white;
        }

    /* Estilo para el contenido de las pestañas */
    .tab-content {
        display: none;
        padding: 20px;
        border: 1px solid #ddd;
        border-top: none;
    }

    /* Estilos adicionales para las cards */
    .card-title {
        font-size: 16px;
        font-weight: 600;
    }

    .card-value {
        font-size: 24px;
        font-weight: 700;
    }

    .card-percentage {
        font-size: 14px;
    }

    .positive {
        color: #0acf97;
    }

    .negative {
        color: #fa5c7c;
    }
</style>
<style media="print">
     canvas {
        max-width: 100% !important;
        height: auto !important;
        page-break-inside: avoid;
    }

    .col-md-6, .chart-break{
        display: block !important;
        width: 100% !important;
    }
    

    .print-row {
        page-break-inside: avoid;
        break-inside: avoid;
        margin-bottom: 20px;
    }

    .card {
        page-break-inside: avoid;
        break-inside: avoid;
    }

    .apexcharts-toolbar {
        display: none !important;
    }

    .apex-charts {
        max-width: 100% !important;
        height: auto !important;
    }

    h3, h4 {
        page-break-after: avoid;
    }

    #btnPrintTab {
        display: none;
    }

    .print-page-break {
        page-break-before: always;
        break-before: page;
    }
    /* Asegurar que los íconos feather se muestren correctamente */
    svg.feather {
        width: 36px;
        height: 36px;
    }
</style>



<!--SECCION DE TABS-->
<div class="tabs-container">
    <!-- Botones de las pestañas -->
    <div class="tabs">
        <button class="tab-button active" onclick="openTab(event, 'tab1')">Desarrollo Urbano</button>
        <button class="tab-button" onclick="openTab(event, 'tab2')">Desarrollo Económico</button>
        <button class="tab-button" onclick="openTab(event, 'tab3')">Seguridad</button>
        <button class="tab-button" onclick="openTab(event, 'tab4')">Obras Públicas</button>
    </div>
    <!--Filtros-->
    <div class="row mx-auto mt-1">
        <div class="col-md-12">
            <div class="card shadow-sm mb-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-5 mb-3">
                            <label for="fechaInicioReporte" class="form-label">Fecha de Inicio:</label>
                            <input type="date" class="form-control" id="fechaInicioReporte">
                        </div>
                        <div class="col-md-5 mb-3">
                            <label for="fechaFinReporte" class="form-label">Fecha de Fin:</label>
                            <input type="date" class="form-control" id="fechaFinReporte">
                        </div>
                        <div class="col-md-2 d-flex align-items-end mb-3">
                            <button type="button" class="btn btn-primary w-100" id="btnConfirmarFechas">Confirmar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--TAB 1 DESARROLLO URBANO-->
    @Html.Partial("../_Shared/PartialViews/_Dashboard_DU")
    <!--TAB 2 DESARROLLO ECONÓMICO-->
    @Html.Partial("../_Shared/PartialViews/_Dashboard_DE")
    <!--TAB 3 SEGURIDAD CIUDADANA-->
    @Html.Partial("../_Shared/PartialViews/_Dashboard_SEG")
    <!--TAB 4 OBRAS PÚBLICAS-->
    @Html.Partial("../_Shared/PartialViews/_Dashboard_OP")

    <!--Botón de imprimir-->
    <div class="row mx-auto p-2">
        <div class="col-md-12 text-center">
            <button type="button" class="btn btn-primary" id="btnPrintTab">
                <i data-feather="printer" class="me-2"></i> Imprimir Pestaña Actual
            </button>
        </div>
    </div>
</div>



<!--FIN TABS-->
<!-- JAVASCRIPT -->
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>

<!-- apexcharts -->
<script src="~/assets/libs/apexcharts/apexcharts.min.js"></script>

<!-- jquery.vectormap map -->
<script src="~/assets/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.min.js"></script>
<script src="~/assets/libs/admin-resources/jquery.vectormap/maps/jquery-jvectormap-us-merc-en.js"></script>

<!-- Required datatable js -->
<script src="~/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>

<!-- Responsive examples -->
<script src="~/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
<script src="~/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>

<script src="~/assets/js/pages/dashboard.init.js"></script>

<!-- App js -->
<script src="~/assets/js/app.js"></script>
<script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
<script>
    feather.replace(); // Inicializa Feather Icons para que los SVGs se rendericen
</script>

<script type="text/javascript">
    function openTab(evt, tabId) {
        // Ocultar todos los contenidos de pestañas
        const tabContents = document.getElementsByClassName("tab-content");
        for (let i = 0; i < tabContents.length; i++) {
            tabContents[i].style.display = "none";
        }

        // Desactivar todos los botones de pestañas
        const tabButtons = document.getElementsByClassName("tab-button");
        for (let i = 0; i < tabButtons.length; i++) {
            tabButtons[i].className = tabButtons[i].className.replace(" active", "");
        }

        // Mostrar la pestaña actual y activar el botón
        document.getElementById(tabId).style.display = "block";
        evt.currentTarget.className += " active";
    }

    // Gráficas para la sección de Inversión
    $(document).ready(function () {
        // Gráfico de pastel - Inversión del predio
        var inversionPredioOptions = {
            series: [45, 30, 25],
            chart: {
                height: 250,
                type: 'pie',
            },
            labels: ['Adquisición', 'Urbanización', 'Construcción'],
            colors: ['#727cf5', '#0acf97', '#fa5c7c'],
            legend: {
                position: 'bottom'
            }
        };
        var inversionPredioChart = new ApexCharts(document.querySelector("#inversion-predio-chart"), inversionPredioOptions);
        inversionPredioChart.render();

        // Gráfico de pastel - Urbanización de predios
        var urbanizacionOptions = {
            series: [70, 30],
            chart: {
                height: 250,
                type: 'pie',
            },
            labels: ['Infraestructura', 'Servicios'],
            colors: ['#6c757d', '#ffbc00'],
            legend: {
                position: 'bottom'
            }
        };
        var urbanizacionChart = new ApexCharts(document.querySelector("#urbanizacion-chart"), urbanizacionOptions);
        urbanizacionChart.render();

        // Gráfico de pastel - Costo venta
        var ventaOptions = {
            series: [60, 25, 15],
            chart: {
                height: 250,
                type: 'pie',
            },
            labels: ['Marketing', 'Comisiones', 'Administración'],
            colors: ['#39afd1', '#e3eaef', '#313a46'],
            legend: {
                position: 'bottom'
            }
        };
        var ventaChart = new ApexCharts(document.querySelector("#venta-chart"), ventaOptions);
        ventaChart.render();

        // Gráfico de líneas - Evolución de la inversión
        var lineColumnOptions = {
            chart: {
                height: 310,
                type: 'line',
                toolbar: {
                    show: false
                }
            },
            stroke: {
                curve: 'smooth',
                width: [3, 3]
            },
            series: [{
                name: "Inversión",
                data: [2800000, 3200000, 3500000, 3800000, 4000000, 4200000, 4500000, 4800000, 5000000, 5200000, 5500000, 5800000]
            }],
            xaxis: {
                categories: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
            },
            colors: ['#727cf5'],
            markers: {
                size: 5
            }
        };
        var lineColumnChart = new ApexCharts(document.querySelector("#line-column-chart"), lineColumnOptions);
        lineColumnChart.render();

        // Gráfico de barras - Vivienda en SErie
        var tramitesBarrasOptions = {
            series: [{
                name: 'Trámites',
                data: [142, 85, 63, 42]
            }],
            chart: {
                type: 'bar',
                height: 250
            },
            plotOptions: {
                bar: {
                    borderRadius: 4,
                    horizontal: true,
                }
            },
            dataLabels: {
                enabled: false
            },
            xaxis: {
                categories: ['Vivienda en serie', 'Casa habitación', 'Trámite menor', 'Uso de suelo'],
            },
            colors: ['#727cf5']
        };
        var tramitesBarrasChart = new ApexCharts(document.querySelector("#tramites-barras-chart"), tramitesBarrasOptions);
        tramitesBarrasChart.render();

        // Gráfico de pastel - Naves
        var proyectosPastelOptions = {
            series: [28, 35, 22, 15],
            chart: {
                height: 250,
                type: 'pie',
            },
            labels: ['Naves industriales', 'Fraccionamientos', 'Industria', 'Comercio'],
            colors: ['#727cf5', '#0acf97', '#fa5c7c', '#ffbc00'],
            legend: {
                position: 'bottom'
            }
        };
        var proyectosPastelChart = new ApexCharts(document.querySelector("#proyectos-pastel-chart"), proyectosPastelOptions);
        proyectosPastelChart.render();
    });
</script>

<!--Script para gráficos de Seguridad-->
<script type="text/javascript">
    $(document).ready(function () {
        // Gráfico de pastel - Inversión en seguridad
        var inversionSeguridadOptions = {
            series: [35, 20, 15, 10, 10, 10],
            chart: {
                height: 250,
                type: 'pie',
            },
            labels: ['Salarios', 'Formación y capacitación', 'Recursos vehículos', 'Academia virtual', 'Armas', 'Tecnología'],
            colors: ['#727cf5', '#0acf97', '#fa5c7c', '#ffbc00', '#39afd1', '#6c757d'],
            legend: {
                position: 'bottom'
            }
        };
        var inversionSeguridadChart = new ApexCharts(document.querySelector("#inversion-seguridad-chart"), inversionSeguridadOptions);
        inversionSeguridadChart.render();

        // Gráfico de barras - Tipo de policía
        var tipoPoliciaOptions = {
            series: [{
                name: 'Policías',
                data: [850, 650, 350]
            }],
            chart: {
                type: 'bar',
                height: 250
            },
            plotOptions: {
                bar: {
                    borderRadius: 4,
                    horizontal: false,
                }
            },
            dataLabels: {
                enabled: false
            },
            xaxis: {
                categories: ['Vialidad', 'Investigación', 'Administrativo'],
            },
            colors: ['#727cf5']
        };
        var tipoPoliciaChart = new ApexCharts(document.querySelector("#tipo-policia-chart"), tipoPoliciaOptions);
        tipoPoliciaChart.render();

        // Gráfico de barras - Salarios por tipo de policía
        var salariosTipoOptions = {
            series: [{
                name: 'Salario promedio',
                data: [175000, 195000, 185000]
            }],
            chart: {
                type: 'bar',
                height: 250
            },
            plotOptions: {
                bar: {
                    borderRadius: 4,
                    horizontal: false,
                }
            },
            dataLabels: {
                enabled: false
            },
            yaxis: {
                labels: {
                    formatter: function (value) {
                        return '$' + value.toLocaleString();
                    }
                }
            },
            xaxis: {
                categories: ['Vialidad', 'Investigación', 'Administrativo'],
            },
            colors: ['#0acf97']
        };
        var salariosTipoChart = new ApexCharts(document.querySelector("#salarios-tipo-chart"), salariosTipoOptions);
        salariosTipoChart.render();

        // Gráfico de pastel - Tipo de delito
        var tipoDelitoOptions = {
            series: [25, 20, 18, 15, 12, 10],
            chart: {
                height: 300,
                type: 'pie',
            },
            labels: ['Robo a negocio', 'Robo a casa', 'Robo de vehículo', 'Robo a transeúnte', 'Violencia familiar', 'Homicidios'],
            colors: ['#727cf5', '#0acf97', '#fa5c7c', '#ffbc00', '#39afd1', '#6c757d'],
            legend: {
                position: 'bottom'
            }
        };
        var tipoDelitoChart = new ApexCharts(document.querySelector("#tipo-delito-chart"), tipoDelitoOptions);
        tipoDelitoChart.render();
    });
    // Gráfico de tendencia de detenciones
    var tendenciaDetencionesOptions = {
        series: [{
            name: "Faltas administrativas",
            data: [280, 310, 290, 320, 350, 380, 400, 420, 450, 480, 500, 520]
        }, {
            name: "Delitos contra la salud",
            data: [70, 85, 90, 95, 100, 110, 105, 115, 120, 125, 130, 135]
        }, {
            name: "Delitos patrimoniales",
            data: [180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280, 290]
        }],
        chart: {
            height: 350,
            type: 'line',
            toolbar: {
                show: false
            }
        },
        stroke: {
            curve: 'smooth',
            width: [3, 3, 3]
        },
        xaxis: {
            categories: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
        },
        colors: ['#727cf5', '#0acf97', '#fa5c7c'],
        markers: {
            size: 5
        },
        legend: {
            position: 'top'
        },
        tooltip: {
            y: {
                formatter: function (value) {
                    return value + " detenciones";
                }
            }
        }
    };
    var tendenciaDetencionesChart = new ApexCharts(document.querySelector("#tendencia-detenciones-chart"), tendenciaDetencionesOptions);
    tendenciaDetencionesChart.render();
    // Gráfico de columnas para servicios en escuelas
    var serviciosEscuelasOptions = {
        series: [{
            name: 'Alumnos atendidos',
            data: [
                { x: 'Ene', y: 320 },
                { x: 'Feb', y: 450 },
                { x: 'Mar', y: 520 },
                { x: 'Abr', y: 480 },
                { x: 'May', y: 550 },
                { x: 'Jun', y: 600 },
                { x: 'Jul', y: 580 },
                { x: 'Ago', y: 620 },
                { x: 'Sep', y: 650 },
                { x: 'Oct', y: 700 },
                { x: 'Nov', y: 680 },
                { x: 'Dic', y: 720 }
            ]
        }],
        chart: {
            type: 'bar',
            height: 350,
            toolbar: {
                show: false
            }
        },
        plotOptions: {
            bar: {
                borderRadius: 4,
                horizontal: false,
                columnWidth: '55%',
            }
        },
        dataLabels: {
            enabled: false
        },
        colors: ['#727cf5'],
        xaxis: {
            type: 'category'
        },
        yaxis: {
            title: {
                text: 'Alumnos atendidos'
            }
        },
        tooltip: {
            y: {
                formatter: function (val) {
                    return val + " alumnos"
                }
            }
        },
        annotations: {
            points: [{
                x: 'Jun',
                y: 600,
                marker: {
                    size: 8,
                    fillColor: '#fff',
                    strokeColor: '#fa5c7c',
                    strokeWidth: 2
                },
                label: {
                    borderColor: '#fa5c7c',
                    offsetY: 0,
                    style: {
                        color: '#fff',
                        background: '#fa5c7c',
                    },
                    text: 'Campaña de prevención'
                }
            }]
        }
    };
    var serviciosEscuelasChart = new ApexCharts(document.querySelector("#servicios-escuelas-chart"), serviciosEscuelasOptions);
    serviciosEscuelasChart.render();
    // Gráfico de percepción de inseguridad (versión mejorada)
    var percepcionInseguridadOptions = {
        series: [{
            name: "Percepción de inseguridad",
            data: [62, 60, 59, 58, 57, 58, 57, 56, 55, 54, 53, 52]
        }],
        chart: {
            height: 350,
            type: 'line',
            toolbar: {
                show: true,
                tools: {
                    download: true,
                    selection: true,
                    zoom: true,
                    zoomin: true,
                    zoomout: true,
                    pan: true,
                    reset: true
                }
            },
            zoom: {
                enabled: true
            }
        },
        stroke: {
            curve: 'smooth',
            width: 3,
            colors: ['#fa5c7c']
        },
        markers: {
            size: 5,
            hover: {
                size: 7
            }
        },
        colors: ['#fa5c7c'],
        xaxis: {
            categories: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
            title: {
                text: 'Meses',
                style: {
                    fontSize: '12px',
                    fontWeight: 400
                }
            }
        },
        yaxis: {
            min: 40,
            max: 70,
            title: {
                text: 'Porcentaje',
                style: {
                    fontSize: '12px',
                    fontWeight: 400
                }
            },
            labels: {
                formatter: function (value) {
                    return value + "%";
                }
            }
        },
        tooltip: {
            y: {
                formatter: function (value) {
                    return value + "% de ciudadanos se sienten inseguros";
                }
            }
        },
        grid: {
            borderColor: '#f1f1f1',
        },
        annotations: {
            points: [{
                x: 'Jun',
                y: 58,
                marker: {
                    size: 8,
                    fillColor: '#fff',
                    strokeColor: '#fa5c7c',
                    strokeWidth: 2
                },
                label: {
                    borderColor: '#fa5c7c',
                    offsetY: 0,
                    style: {
                        color: '#fff',
                        background: '#fa5c7c',
                    },
                    text: 'Inicio campañas preventivas'
                }
            }]
        }
    };

    var percepcionInseguridadChart = new ApexCharts(document.querySelector("#percepcion-inseguridad-chart"), percepcionInseguridadOptions);
    percepcionInseguridadChart.render();
    // Gráfico de distribución de exámenes
    var distribucionExamenesOptions = {
        series: [2150, 700],
        chart: {
            height: 200,
            type: 'donut',
        },
        labels: ['Policías', 'Administrativos'],
        colors: ['#727cf5', '#6c757d'],
        legend: {
            position: 'bottom'
        },
        plotOptions: {
            pie: {
                donut: {
                    size: '70%',
                    labels: {
                        show: true,
                        total: {
                            show: true,
                            label: 'Total',
                            formatter: function (w) {
                                return '2,850'
                            }
                        }
                    }
                }
            }
        }
    };
    var distribucionExamenesChart = new ApexCharts(document.querySelector("#distribucion-examenes-chart"), distribucionExamenesOptions);
    distribucionExamenesChart.render();

    //tab 2
    // Sectores pastel
    var sectoresOptions = {
        series: [20, 15, 25, 10, 20, 10],
        chart: { height: 250, type: 'pie' },
        labels: ['Alimentos', 'Empacadora', 'Manufactura', 'Comercio', 'Transporte', 'Automotriz'],
        colors: ['#727cf5', '#0acf97', '#fa5c7c', '#ffbc00', '#39afd1', '#313a46'],
        legend: { position: 'bottom' }
    };
    var sectoresChart = new ApexCharts(document.querySelector("#sectores-pastel-chart"), sectoresOptions);
    sectoresChart.render();

    // Tamaño empresa pastel
    var tamanoEmpresaOptions = {
        series: [60, 25, 10, 5],
        chart: { height: 250, type: 'pie' },
        labels: ['Micro', 'Pequeñas', 'Medianas', 'Grandes'],
        colors: ['#6c757d', '#ffbc00', '#727cf5', '#0acf97'],
        legend: { position: 'bottom' }
    };
    var tamanoEmpresaChart = new ApexCharts(document.querySelector("#tamano-empresa-pastel-chart"), tamanoEmpresaOptions);
    tamanoEmpresaChart.render();

    // Empleo formal/informal
    var empleoFormalOptions = {
        series: [70, 30],
        chart: { height: 250, type: 'pie' },
        labels: ['Formal', 'Informal'],
        colors: ['#39afd1', '#fa5c7c'],
        legend: { position: 'bottom' }
    };
    var empleoFormalChart = new ApexCharts(document.querySelector("#empleo-formal-pastel-chart"), empleoFormalOptions);
    empleoFormalChart.render();

    // Empleo por género
    var empleoGeneroOptions = {
        series: [55, 45],
        chart: { height: 250, type: 'pie' },
        labels: ['Hombres', 'Mujeres'],
        colors: ['#313a46', '#e3eaef'],
        legend: { position: 'bottom' }
    };
    var empleoGeneroChart = new ApexCharts(document.querySelector("#empleo-genero-pastel-chart"), empleoGeneroOptions);
    empleoGeneroChart.render();

    // Empleo por sector (barras)
    var empleoSectorOptions = {
        series: [{ name: 'Nuevos empleos', data: [120, 80, 60, 40, 30, 20] }],
        chart: { type: 'bar', height: 250 },
        xaxis: { categories: ['Alimentos', 'Empacadora', 'Manufactura', 'Comercio', 'Transporte', 'Automotriz'] },
        colors: ['#727cf5']
    };
    var empleoSectorChart = new ApexCharts(document.querySelector("#empleo-sector-bar-chart"), empleoSectorOptions);
    empleoSectorChart.render();

    // Salud (barras)
    var saludOptions = {
        series: [{ name: 'Afiliados', data: [5000, 3000, 2000] }],
        chart: { type: 'bar', height: 250 },
        xaxis: { categories: ['IMSS', 'ISSSTE', 'Privado'] },
        colors: ['#0acf97']
    };
    var saludChart = new ApexCharts(document.querySelector("#salud-bar-chart"), saludOptions);
    saludChart.render();

    // Bolsa de empleo (barras)
    var bolsaEmpleoOptions = {
        series: [{ name: 'Vacantes', data: [200, 150, 100] }],
        chart: { type: 'bar', height: 250 },
        xaxis: { categories: ['Eventos', 'Digital', 'Empresas'] },
        colors: ['#fa5c7c']
    };
    var bolsaEmpleoChart = new ApexCharts(document.querySelector("#bolsa-empleo-bar-chart"), bolsaEmpleoOptions);
    bolsaEmpleoChart.render();

    // Capacitaciones y emprendimiento (barras)
    var capacitacionOptions = {
        series: [{ name: 'Personas', data: [80, 60, 40] }],
        chart: { type: 'bar', height: 250 },
        xaxis: { categories: ['Capacitados', 'Emprendedores', 'Incubadoras'] },
        colors: ['#ffbc00']
    };
    var capacitacionChart = new ApexCharts(document.querySelector("#capacitacion-bar-chart"), capacitacionOptions);
    capacitacionChart.render();

    //tab4
    // Gráfica: Distribución por Tipo de Obra (Pastel)
    var obraTipoOptions = {
        series: [35, 30, 20, 15], // Datos de ejemplo para Pluvial, Vialidad, Edificios Públicos, Otros
        chart: { height: 250, type: 'pie' },
        labels: ['Pluvial', 'Vialidad', 'Edificios Públicos', 'Otros'],
        colors: ['#0acf97', '#727cf5', '#ffbc00', '#fa5c7c'], // Colores distintos
        legend: { position: 'bottom' },
        dataLabels: { enabled: true, formatter: function (val) { return val.toFixed(1) + '%' } }
    };
    var obraTipoChart = new ApexCharts(document.querySelector("#obra-tipo-pastel-chart"), obraTipoOptions);
    obraTipoChart.render();

    // Gráfica: Distribución por Sector (Pastel)
    var obraSectorOptions = {
        series: [25, 20, 15, 10, 30], // Datos de ejemplo para Educación, Salud, Deporte, Seguridad, Otros
        chart: { height: 250, type: 'pie' },
        labels: ['Educación', 'Salud', 'Deporte', 'Seguridad', 'Cultura'],
        colors: ['#39afd1', '#6c757d', '#313a46', '#e3eaef', '#727cf5'], // Colores distintos
        legend: { position: 'bottom' },
        dataLabels: { enabled: true, formatter: function (val) { return val.toFixed(1) + '%' } }
    };
    var obraSectorChart = new ApexCharts(document.querySelector("#obra-sector-pastel-chart"), obraSectorOptions);
    obraSectorChart.render();

    // Gráfica: Detalle de Obras (Barras)
    var obraDetalleOptions = {
        series: [{
            name: 'Inversión (MXN)',
            data: [15000000, 12000000, 9000000, 7000000, 5000000] // Montos de ejemplo
        }],
        chart: { type: 'bar', height: 300 },
        xaxis: {
            categories: ['Casa Rosa', 'Unidad de Rehabilitación', 'Parque Central', 'Rehabilitación Vial Av. Principal', 'Escuela Modelo'],
            labels: {
                rotate: -45, // Mantenemos la rotación si es necesaria
                // Añadimos el formatter para truncar y añadir puntos suspensivos
                formatter: function (val) {
                    const maxLength = 20; // Define el número máximo de caracteres antes de truncar
                    if (val && val.length > maxLength) {
                        return val.substring(0, maxLength) + '...';
                    }
                    return val;
                }
            }
        },
        yaxis: {
            title: { text: 'Inversión' },
            labels: { formatter: function (val) { return '$' + (val / 1000000).toFixed(0) + ' M'; } } // Formatear a millones
        },
        plotOptions: {
            bar: {
                horizontal: false,
                columnWidth: '55%'
            },
        },
        dataLabels: {
            enabled: false
        },
        colors: ['#0acf97'] // Color para las barras
    };
    var obraDetalleChart = new ApexCharts(document.querySelector("#obra-detalle-bar-chart"), obraDetalleOptions);
    obraDetalleChart.render();

</script>
<script>
    document.getElementById('btnPrintTab').addEventListener('click', function () {
        // Encuentra la pestaña activa
        const activeTabBtn = document.querySelector('.tab-button.active');
        if (!activeTabBtn) return;

        const tabId = activeTabBtn.getAttribute('onclick').match(/'([^']+)'/)[1];
        const tabContent = document.getElementById(tabId);

        if (!tabContent) return;

        const printWindow = window.open('', '', 'height=800,width=1000');
        printWindow.document.write('<html><head><title>Imprimir</title>');

        // Copia los estilos actuales
        document.querySelectorAll('link[rel="stylesheet"], style').forEach((el) => {
            printWindow.document.write(el.outerHTML);
        });

        printWindow.document.write('</head><body>');
        printWindow.document.write(tabContent.outerHTML);
        printWindow.document.write('</body></html>');

        printWindow.document.close();
        printWindow.focus();
        setTimeout(() => {
            printWindow.print();
            printWindow.close();
        }, 500);
    });
</script>
